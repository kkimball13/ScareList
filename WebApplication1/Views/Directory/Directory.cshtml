
@model WebApplication1.Models.ViewModels.ItemViewModel<int?>


@{
    Layout = "~/Views/Shared/NewLayout.cshtml";
}

@*test comment*@
<div class="row" g-app="app" ng-controller="Main as vm">
    <div style="padding-top:100px; background-color: blanchedalmond">

        <div n>


            @*Get List*@
            <div class="row">
                <h2 style="padding-left:50px">Haunt Directory</h2>
                <div class="panel col-md-12" style="background-color:beige">
                    <div class="panel-body" id="hauntList">
                        <div class="row">
                            <div data-ng-repeat="haunt in items track by haunt.Id">
                                <div class="panel-body text-left">
                                    <div class="singleHaunt">
                                        <div class="hauntBox" style="padding:25px">
                                            <div class="hauntName"><span>{{haunt.Name}} {{haunt.Name}}</span></div>
                                            <div class="displayName"><span><i class="fa fa-envelope"></i><span> {{haunt.URL}}</span></span></div>
                                            <br />

                                            <div class="btn-group">
                                                <button type="button" ng-click="updateHaunt(haunt)" class="btn btn-default" style="background-color:aquamarine">Edit</button>
                                            </div>
                                            <div class="btn-group">
                                                <button type="button" ng-click="deleteHaunt(haunt)" class="btn btn-default" style="background-color:lightgreen">Delete</button>
                                            </div>

                                        </div>

                                    </div>
                                    <hr />

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts {
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/app/app.module.js"></script>
    @*<script src="~/app/directory.js"></script>*@
    <script type="text/javascript">

        $(document).ready(function () {

            receiveItems(onGetSuccess, onGetError);
        });

        function receiveItems(onGetSuccess, onGetError) {

            console.log("test");

            var url = "/api/haunts";

            var settings = {
                cache: false
                , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                , dataType: "json"
                , success: onGetSuccess
                , error: onGetError
                , type: "GET"
            };

            $.ajax(url, settings);


        }

        function onGetSuccess(data, status, xhr) {
            console.log("success");
            console.log(data);
            var itemlist = data.items;

        }

        function onGetError() {
            console.log("error");
        }


    </script>


    @*<script>providerId = '@Model.Item';</script>*@


    @*<script type="text/javascript">

            var myApp = angular.module('listApp1', []);

            myApp.controller('ListController', ['$scope', function ($scope) {
                var vm = $scope;


                vm.items = null;
                vm.receiveItems = _receiveItems;
                vm.provider = null;
                vm.showUpdateForm = false;


                vm.provider = {};

                vm.onGetSuccess = _onGetSuccess;
                vm.onGetError = _onGetError;
                vm.onPutSuccess = _onPutSuccess;
                vm.onPutError = _onPutError;
                vm.updateProvider = _updateProvider;
                vm.submitUpdate = _submitUpdate;
                vm.deleteProvider = _deleteProvider;
                vm.onDeleteSuccess = _onDeleteSuccess;
                vm.onDeleteError = _onDeleteError;
                vm.populateUpdateForm = _populateUpdateForm;
                vm.cancelUpdate = _cancelUpdate;
                vm.fireAlert = _fireAlert;


                render();

                function render() {
                    var url = "/api/haunts";

                    var settings = {
                        cache: false
                        , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                        , dataType: "json"
                        , success: vm.receiveItems
                        , error: vm.onGetError
                        , type: "GET"
                    };

                    $.ajax(url, settings);


                }

                function _receiveItems(data) {

                    vm.$apply(function () {
                        vm.items = data.Items;

                        console.log(vm.items);

                    });
                }


                function _updateHaunt(aHaunt) {

                    //vm.showUpdateForm = true;

                    var url = "/api/haunts/" + aHaunt.Id;
                    var settings = {
                        cache: false
                    , contentType: "application/x-wwwa-form-urlencoded; charset=UTF-8"
                    , dataType: "json"
                    , success: vm.populateUpdateForm(aProvider)
                    , error: vm.onGetError
                    , type: "GET"
                    };

                    $.ajax(url, settings);

                }

                function _submitUpdate(hauntId) {


                    var myData = $("#providerInformation").serialize();

                    var providerData = myData + '&Id=' + providerId;

                    var url = "/api/providers/" + providerId;
                    var settings = {
                        cache: false
                       , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                       , data: providerData
                       , dataType: "json"
                       , success: vm.onPutSuccess
                       , error: vm.onPutError
                       , type: "PUT"

                    }
                    $.ajax(url, settings);


                }


                function _deleteProvider(aProvider) {


                    var url = "/api/providers/" + aProvider.Id;
                    var settings = {
                        cache: false
                       , contentType: "application/x-www-form-urlencoded; charset=UTF-8"
                       , dataType: "json"
                       , success: vm.onDeleteSuccess
                       , error: vm.onDeleteError
                       , type: "DELETE"

                    };
                    $.ajax(url, settings);

                }

                function _populateUpdateForm(aProvider) {



                    vm.aProviderDetails = aProvider;
                    console.log(vm.items);


                }

                function _onGetSuccess() {
                    console.log("success");

                }

                function _onGetError(jqXhr, error) {
                    vm.$log.log(error);
                    vm.fireAlert('error', 'Try again', 'Insert failed');
                }

                function _onPutSuccess() {

                    console.log("updated");

                    render();
                    vm.showUpdateForm = false;
                    vm.fireAlert('success', vm.successfulBatches + 'Batch of addresses added to database', 'Insert successful');
                }

                function _onPutError(jqXhr, error) {
                    console.log("error");

                }

                function _onDeleteSuccess(data, status, xhr) {

                    render();

                }

                function _onDeleteError(jqXhr, error) {
                    vm.$alertService.error("Error!", "Something went wrong");
                }

                function _cancelUpdate() {
                    vm.showUpdateForm = false;

                }


                function _fireAlert(type, message, header) {
                    vm.$alertService[type](message, header);
                }


            }]);


        </script>*@
}